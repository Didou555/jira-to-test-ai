export const translations = {
  fr: {
    header: {
      title: "ü§ñ QA Agent IA - POC",
      demo: "Demo",
    },
    step1: {
      title: "üìã √âtape 1 : S√©lectionner une Story Jira",
      description: "Collez l'URL compl√®te de votre story Jira",
      label: "URL de la Story Jira",
      required: "*",
      placeholder: "https://qaautomation-demo.atlassian.net/browse/KAN-5",
      generateButton: "ü§ñ G√©n√©rer le Test Plan avec l'Agent IA",
      checking: "V√©rification des test plans existants...",
      analyzing: "L'agent IA analyse la story...",
    },
    existingPlan: {
      title: "Test Plan Existant D√©tect√©",
      description: "Une sub-task de test plan existe d√©j√† pour cette story :",
      createdOn: "Cr√©√© le",
      question: "ü§î Que souhaitez-vous faire ?",
      update: "‚úèÔ∏è Modifier le Test Plan Existant",
      createNew: "‚ûï Cr√©er un Nouveau Test Plan",
    },
    reasoning: {
      title: "üß† Raisonnement de l'Agent IA",
    },
    storyDetails: {
      title: "üìñ D√©tails de la Story",
      criticality: "Criticit√©",
      testCases: "test cases",
      testCoverage: "üìä Couverture des Tests",
      generated: "G√©n√©r√©s",
      properlyFormatted: "Bien format√©s",
      target: "Objectif",
      progress: "Progression",
      security: "S√©curit√©",
      required: "Requise",
      notRequired: "Non requise",
      qualityScore: "Score Qualit√©",
      iterations: "It√©rations",
    },
    testPlan: {
      titleGenerated: "‚ú® Test Plan G√©n√©r√© par l'Agent IA",
      titleUpdated: "‚ú® Test Plan Mis √† Jour par l'Agent IA",
      updateMode: "üîÑ Mode Mise √† Jour - Sub-task",
      approveButton: "‚úÖ Approuver & Cr√©er Sub-task Jira",
      updateButton: "‚úÖ Valider & Mettre √† Jour la Sub-task",
      approving: "Cr√©ation de la sub-task en cours...",
      updating: "Mise √† jour en cours...",
      correctionButton: "‚úèÔ∏è Demander une Correction",
    },
    correctionModal: {
      title: "üí¨ Quelle am√©lioration souhaitez-vous ?",
      placeholder: "Exemple : Ajouter plus de tests de s√©curit√© pour les cas d'injection SQL et XSS...",
      helper: "L'agent IA va analyser votre feedback et r√©g√©n√©rer le test plan",
      cancel: "Annuler",
      regenerate: "üîÑ R√©g√©n√©rer avec ces am√©liorations",
    },
    successModal: {
      title: "üéâ Sub-task Cr√©√©e avec Succ√®s !",
      description: "La sub-task {key} a √©t√© cr√©√©e dans Jira",
      viewInJira: "üîó Voir dans Jira",
      createAnother: "‚ûï Cr√©er un Autre Test Plan",
    },
    toasts: {
      urlRequired: "‚ö†Ô∏è URL requise",
      urlRequiredDesc: "Veuillez entrer une URL Jira valide",
      urlInvalid: "‚ö†Ô∏è URL invalide",
      urlInvalidDesc: "L'URL doit contenir 'atlassian.net/browse/'",
      errorGenerate: "‚ùå Erreur",
      errorGenerateDesc: "Erreur lors de la g√©n√©ration du test plan",
      testPlanUpdated: "‚úÖ Test plan mis √† jour",
      testPlanUpdatedDesc: "Le test plan a √©t√© mis √† jour avec succ√®s",
      errorApprove: "‚ùå Erreur",
      errorApproveDesc: "Erreur lors de la cr√©ation/mise √† jour de la sub-task",
      feedbackRequired: "‚ö†Ô∏è Feedback requis",
      feedbackRequiredDesc: "Veuillez entrer votre feedback",
      testPlanRegenerated: "‚úÖ Test plan r√©g√©n√©r√©",
      testPlanRegeneratedDesc: "Le test plan a √©t√© mis √† jour avec vos am√©liorations",
      errorCorrection: "‚ùå Erreur",
      errorCorrectionDesc: "Erreur lors de la correction",
    },
  },
  en: {
    header: {
      title: "ü§ñ QA Agent AI - POC",
      demo: "Demo",
    },
    step1: {
      title: "üìã Step 1: Select a Jira Story",
      description: "Paste the full URL of your Jira story",
      label: "Jira Story URL",
      required: "*",
      placeholder: "https://qaautomation-demo.atlassian.net/browse/KAN-5",
      generateButton: "ü§ñ Generate Test Plan with AI Agent",
      checking: "Checking for existing test plans...",
      analyzing: "AI agent is analyzing the story...",
    },
    existingPlan: {
      title: "Existing Test Plan Detected",
      description: "A test plan sub-task already exists for this story:",
      createdOn: "Created on",
      question: "ü§î What would you like to do?",
      update: "‚úèÔ∏è Update Existing Test Plan",
      createNew: "‚ûï Create New Test Plan",
    },
    reasoning: {
      title: "üß† AI Agent Reasoning",
    },
    storyDetails: {
      title: "üìñ Story Details",
      criticality: "Criticality",
      testCases: "test cases",
      testCoverage: "üìä Test Coverage",
      generated: "Generated",
      properlyFormatted: "Properly Formatted",
      target: "Target",
      progress: "Progress",
      security: "Security",
      required: "Required",
      notRequired: "Not required",
      qualityScore: "Quality Score",
      iterations: "Iterations",
    },
    testPlan: {
      titleGenerated: "‚ú® Test Plan Generated by AI Agent",
      titleUpdated: "‚ú® Test Plan Updated by AI Agent",
      updateMode: "üîÑ Update Mode - Sub-task",
      approveButton: "‚úÖ Approve & Create Jira Sub-task",
      updateButton: "‚úÖ Validate & Update Sub-task",
      approving: "Creating sub-task...",
      updating: "Updating...",
      correctionButton: "‚úèÔ∏è Request Correction",
    },
    correctionModal: {
      title: "üí¨ What improvement would you like?",
      placeholder: "Example: Add more security tests for SQL injection and XSS cases...",
      helper: "The AI agent will analyze your feedback and regenerate the test plan",
      cancel: "Cancel",
      regenerate: "üîÑ Regenerate with these improvements",
    },
    successModal: {
      title: "üéâ Sub-task Created Successfully!",
      description: "Sub-task {key} has been created in Jira",
      viewInJira: "üîó View in Jira",
      createAnother: "‚ûï Create Another Test Plan",
    },
    toasts: {
      urlRequired: "‚ö†Ô∏è URL required",
      urlRequiredDesc: "Please enter a valid Jira URL",
      urlInvalid: "‚ö†Ô∏è Invalid URL",
      urlInvalidDesc: "URL must contain 'atlassian.net/browse/'",
      errorGenerate: "‚ùå Error",
      errorGenerateDesc: "Error generating test plan",
      testPlanUpdated: "‚úÖ Test plan updated",
      testPlanUpdatedDesc: "Test plan has been successfully updated",
      errorApprove: "‚ùå Error",
      errorApproveDesc: "Error creating/updating sub-task",
      feedbackRequired: "‚ö†Ô∏è Feedback required",
      feedbackRequiredDesc: "Please enter your feedback",
      testPlanRegenerated: "‚úÖ Test plan regenerated",
      testPlanRegeneratedDesc: "Test plan has been updated with your improvements",
      errorCorrection: "‚ùå Error",
      errorCorrectionDesc: "Error during correction",
    },
  },
  ru: {
    header: {
      title: "ü§ñ QA –ê–≥–µ–Ω—Ç –ò–ò - POC",
      demo: "–î–µ–º–æ",
    },
    step1: {
      title: "üìã –®–∞–≥ 1: –í—ã–±–µ—Ä–∏—Ç–µ Story Jira",
      description: "–í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–Ω—ã–π URL –≤–∞—à–µ–π story Jira",
      label: "URL Story Jira",
      required: "*",
      placeholder: "https://qaautomation-demo.atlassian.net/browse/KAN-5",
      generateButton: "ü§ñ –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç-–ø–ª–∞–Ω —Å –ø–æ–º–æ—â—å—é –∞–≥–µ–Ω—Ç–∞ –ò–ò",
      checking: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–≤...",
      analyzing: "–ê–≥–µ–Ω—Ç –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç story...",
    },
    existingPlan: {
      title: "–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç-–ø–ª–∞–Ω",
      description: "–ü–æ–¥–∑–∞–¥–∞—á–∞ —Å —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —ç—Ç–æ–π story:",
      createdOn: "–°–æ–∑–¥–∞–Ω–æ",
      question: "ü§î –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
      update: "‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç-–ø–ª–∞–Ω",
      createNew: "‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ—Å—Ç-–ø–ª–∞–Ω",
    },
    reasoning: {
      title: "üß† –†–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –ò–ò",
    },
    storyDetails: {
      title: "üìñ –î–µ—Ç–∞–ª–∏ Story",
      criticality: "–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å",
      testCases: "—Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤",
      testCoverage: "üìä –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏",
      generated: "–°–æ–∑–¥–∞–Ω–æ",
      properlyFormatted: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–æ",
      target: "–¶–µ–ª—å",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      security: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      required: "–¢—Ä–µ–±—É–µ—Ç—Å—è",
      notRequired: "–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è",
      qualityScore: "–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞",
      iterations: "–ò—Ç–µ—Ä–∞—Ü–∏–∏",
    },
    testPlan: {
      titleGenerated: "‚ú® –¢–µ—Å—Ç-–ø–ª–∞–Ω —Å–æ–∑–¥–∞–Ω –∞–≥–µ–Ω—Ç–æ–º –ò–ò",
      titleUpdated: "‚ú® –¢–µ—Å—Ç-–ø–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω –∞–≥–µ–Ω—Ç–æ–º –ò–ò",
      updateMode: "üîÑ –†–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è - –ü–æ–¥–∑–∞–¥–∞—á–∞",
      approveButton: "‚úÖ –£—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–∑–∞–¥–∞—á—É Jira",
      updateButton: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á—É",
      approving: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏...",
      updating: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...",
      correctionButton: "‚úèÔ∏è –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
    },
    correctionModal: {
      title: "üí¨ –ö–∞–∫–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ?",
      placeholder: "–ü—Ä–∏–º–µ—Ä: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–ª—É—á–∞–µ–≤ SQL-–∏–Ω—ä–µ–∫—Ü–∏–π –∏ XSS...",
      helper: "–ê–≥–µ–Ω—Ç –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –æ—Ç–∑—ã–≤ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç-–ø–ª–∞–Ω",
      cancel: "–û—Ç–º–µ–Ω–∞",
      regenerate: "üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Å —ç—Ç–∏–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏",
    },
    successModal: {
      title: "üéâ –ü–æ–¥–∑–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!",
      description: "–ü–æ–¥–∑–∞–¥–∞—á–∞ {key} —Å–æ–∑–¥–∞–Ω–∞ –≤ Jira",
      viewInJira: "üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ Jira",
      createAnother: "‚ûï –°–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ç–µ—Å—Ç-–ø–ª–∞–Ω",
    },
    toasts: {
      urlRequired: "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è URL",
      urlRequiredDesc: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π URL Jira",
      urlInvalid: "‚ö†Ô∏è –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π URL",
      urlInvalidDesc: "URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 'atlassian.net/browse/'",
      errorGenerate: "‚ùå –û—à–∏–±–∫–∞",
      errorGenerateDesc: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç-–ø–ª–∞–Ω–∞",
      testPlanUpdated: "‚úÖ –¢–µ—Å—Ç-–ø–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω",
      testPlanUpdatedDesc: "–¢–µ—Å—Ç-–ø–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω",
      errorApprove: "‚ùå –û—à–∏–±–∫–∞",
      errorApproveDesc: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–∑–∞–¥–∞—á–∏",
      feedbackRequired: "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
      feedbackRequiredDesc: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤",
      testPlanRegenerated: "‚úÖ –¢–µ—Å—Ç-–ø–ª–∞–Ω –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω",
      testPlanRegeneratedDesc: "–¢–µ—Å—Ç-–ø–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —Å –≤–∞—à–∏–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏",
      errorCorrection: "‚ùå –û—à–∏–±–∫–∞",
      errorCorrectionDesc: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏",
    },
  },
};
